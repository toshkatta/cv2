.row.mb-2.mt-4
	.col-sm-12
		.text-container
			h3.uppercase.my-2.
				Working experience
hr.mb-2
ul
	.row
		.col-sm-12
			li
				.rect
				h4.uppercase.
					Game developer 07.2016 - 03.2017
	.row
		.col-sm-12
			.company.my-2.
				Melon
	.row
		.col-sm-12.
			I was working on a casino slots game with bonus games created with <strong>TypeScript</strong> and <strong>Phaser</strong>. My job was to help implemet one of the bonus games - receive event for the start of the game and load all necessary assets, disable user interaction while animations are playing, trigger animations based on user interaction and response from awards server, save all events and responses from previous game and play them back in case the user did not finish the bonus game the last time it was played and wants to continue from that point, send events when the bonus game is over to the main game so it can continue where it left off, refactor code, create documentation, create <strong>gulp</strong> files for automation and fix assets in <strong>Photoshop</strong>.

	.row.mt-4
		.col-sm-12
			li
				.rect
				h4.uppercase.
					AngularJS web developer 06.2015 - 07.2016
	.row
		.col-sm-12
			.company.my-2.
				Dodona(06.2015 - 09.2015) and Lanta(09.2015 - 07.2016)
	.row
		.col-sm-12.
			My job was to write most of the AngularJS and server Node.js code - Angular communicated with a server where I validated the user data, checked for wether or not the user is logged in, implemented authentication with Facebook, Google and Twitter, send and receive data from PayPal and EasyPay which we used as online payment systems, implemet search for books and deals with sorting for each and every possible porperty(title/author/publisher...) and also combined properties, load data from all the basic api requests with pagination. Afterwards this server communicated with a back end server which worked with the database. At the Angular side I implemented custom validations for user data, created services for communation with the first server, worked with custom modals, implement the cart and payment process with options to add/remove a book/deal, but not a single book from a deal, increase/decrease quantity, display collections of liked, wishlisted and purchased books, implement comments and replies to books, deals, user profiles and groups, implement different pages for regular users and publishers, implement the publishing process, implement image upload for user and publisher avatars, book and group covers, implement subscription payment process and automatically renew it after it expires, load all the basic data with pagination. I did not participate much in the CMS and the book reader. I only added a small feature to the book reader which allows users to add annotations to selected words on a book page. I also did not write much html/css because that was a colleague of mine's entire job. Most of the time I just added the angular directives and classes to an already stylyzed page. After our team left the project has been reworked and redesigned and none of us have access to the code so I don't know how much of it is still there.
	.row.my-2
		.col-sm-12
			a(href="https://lexicon.bg/" target="_blank")
				img.portfolio-image(src="./images/lex.jpg")